{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/info-http/info-request.service.ts","webpack:///./src/app/landing-page/landing-page.component.css","webpack:///./src/app/landing-page/landing-page.component.html","webpack:///./src/app/landing-page/landing-page.component.ts","webpack:///./src/app/repository/repository.component.css","webpack:///./src/app/repository/repository.component.html","webpack:///./src/app/repository/repository.component.ts","webpack:///./src/app/user.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAEvD,IAAM,MAAM,GAAW,EAAE,CAAC;AAM1B;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACT7B,+DAA+D,+H;;;;;;;;;;;ACA/D,iM;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,QAAQ,CAAC;IACnB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACI;AACuB;AAEZ;AACT;AAC8B;AACL;AACf;AACiB;AAmB1E;IAAA;IAAyB,CAAC;IAAb,SAAS;QAjBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,yFAAoB;gBACpB,oFAAmB;aACpB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,0DAAW;gBACX,qEAAgB;gBAChB,sEAAgB,CAAC,OAAO,EAAE;gBAC1B,wFAA0B;aAC3B;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;AC7BqB;AACO;AACU;AAC7B;AAQ/B;IAKE,4BAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QACjC,IAAI,CAAC,IAAI,GAAE,IAAI,0CAAI,CAAC,EAAE,EAAC,EAAE,EAAE,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,IAAI,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,IAAI,GAAE,EAAE,CAAC;IACf,CAAC;IACD,wCAAW,GAAX,UAAY,IAAW;QAAvB,iBA4BA;QAnBC,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAC,MAAM;YACvC,KAAI,CAAC,IAAI,CAAC,GAAG,CAAS,+BAA+B,GAAE,IAAI,GAAE,gBAAgB,GAAE,qEAAW,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,kBAAQ;gBACxH,KAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK;gBACnC,KAAI,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,UAAU;gBACtC,KAAI,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,YAAY;gBACvC,KAAI,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS;gBACxC,KAAI,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS;gBACxC,KAAI,CAAC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,UAAU;gBAE3C,OAAO,EAAE;YACX,CAAC,EACD,eAAK;gBACH,KAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,MAAM;gBAC3B,KAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC;gBAEjC,MAAM,CAAC,KAAK,CAAC;YACf,CAAC,CAAC;QACJ,CAAC,CAAC;QACF,OAAO,OAAO;IAChB,CAAC;IAED,wCAAW,GAAX,UAAY,IAAI;QAAhB,iBAwBC;QAlBC,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACxC,KAAI,CAAC,IAAI,CAAC,GAAG,CAAS,+BAA+B,GAAE,IAAI,GAAE,sBAAsB,GAAE,qEAAW,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CACnH,kBAAQ;gBACN,KAAK,IAAI,CAAC,IAAI,QAAQ,EAAE;oBACtB,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC7B;gBACD,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC;gBACtB,OAAO,EAAE,CAAC;YACZ,CAAC,EACD,eAAK;gBACH,KAAI,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;gBACtB,KAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;gBAExB,MAAM,CAAC,KAAK,CAAC,CAAC;YAChB,CAAC,CAAC;QAER,CAAC,CAAC,CAAC;QACH,OAAO,OAAO,CAAC;IACjB,CAAC;IA/DU,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAMyB,+DAAU;OALxB,kBAAkB,CAgE9B;IAAD,yBAAC;CAAA;AAhE8B;;;;;;;;;;;;ACX/B,+DAA+D,2J;;;;;;;;;;;ACA/D,8iBAA8iB,eAAe,aAAa,aAAa,6CAA6C,YAAY,yBAAyB,gBAAgB,yBAAyB,gBAAgB,uCAAuC,uBAAuB,uC;;;;;;;;;;;;;;;;;;;;;;ACA9uB;AACA;AACpB;AAC6B;AACW;AAErB;AAQjD;IAKE,8BAAoB,IAAe,EACxB,WAA+B,EAC/B,MAAsB;QAFb,SAAI,GAAJ,IAAI,CAAW;QACxB,gBAAW,GAAX,WAAW,CAAoB;QAC/B,WAAM,GAAN,MAAM,CAAgB;IAE3B,CAAC;IAEL,0CAAW,GAAX,UAAY,IAAI;QAAhB,iBAuBC;QAjBC,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAExC,KAAI,CAAC,IAAI,CAAC,GAAG,CAAS,+BAA+B,GAAE,IAAI,GAAE,sBAAsB,GAAE,wEAAW,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CACrH,kBAAQ;gBACN,KAAK,IAAI,CAAC,IAAI,QAAQ,EAAE;oBACtB,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC7B;gBACD,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC;gBACtB,OAAO,EAAE,CAAC;YACZ,CAAC,EACD,eAAK;gBACH,KAAI,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;gBACtB,KAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;gBAExB,MAAM,CAAC,KAAK,CAAC,CAAC;YAChB,CAAC,CAAC;QACJ,CAAC,CAAC;IACN,CAAC;IAEJ,yCAAU,GAAV,UAAW,OAAc;QAAzB,iBAoBA;QATC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,+BAA+B,GAAC,OAAO,GAAC,gBAAgB,GAAC,CAAC,wEAAW,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/G,wBAAwB;YACxB,KAAI,CAAC,IAAI,GAAG,IAAI,0CAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC;QACvH,CAAC,EACC,aAAG;YACH,KAAI,CAAC,IAAI,GAAG,IAAI,0CAAI,CAAC,yBAAyB,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,IAAI,IAAI,CAAC,IAAI,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YAC3E,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;QACjC,CAAC,CACA;IACH,CAAC;IACD,uCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAEnC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;QAElC,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;IACnC,CAAC;IAjEW,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,wHAA4C;;SAE7C,CAAC;+EAMyB,+DAAU;YACX,kFAAkB;YACvB,8DAAc;OAPtB,oBAAoB,CAmEhC;IAAD,2BAAC;CAAA;AAnEgC;;;;;;;;;;;;ACdjC,+DAA+D,uJ;;;;;;;;;;;ACA/D,iKAAiK,cAAc,yBAAyB,iBAAiB,uBAAuB,cAAc,a;;;;;;;;;;;;;;;;;;;;;ACA5M;AACA;AAES;AAEW;AACrB;AAOjD;IAKE,6BAAoB,IAAe,EACzB,WAA+B,EAC/B,MAAsB;QAFZ,SAAI,GAAJ,IAAI,CAAW;QACzB,gBAAW,GAAX,WAAW,CAAoB;QAC/B,WAAM,GAAN,MAAM,CAAgB;IAE5B,CAAC;IACH,yCAAW,GAAX,UAAY,IAAI;QAAhB,iBAuBC;QAjBC,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAExC,KAAI,CAAC,IAAI,CAAC,GAAG,CAAS,+BAA+B,GAAE,IAAI,GAAE,sBAAsB,GAAE,wEAAW,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CACrH,kBAAQ;gBACN,KAAK,IAAI,CAAC,IAAI,QAAQ,EAAE;oBACtB,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC7B;gBACD,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC;gBACtB,OAAO,EAAE,CAAC;YACZ,CAAC,EACD,eAAK;gBACH,KAAI,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;gBACtB,KAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;gBAExB,MAAM,CAAC,KAAK,CAAC,CAAC;YAChB,CAAC,CAAC;QACJ,CAAC,CAAC;IACN,CAAC;IACH,sCAAQ,GAAR;QACE,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;IACpC,CAAC;IAtCU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,kHAA0C;;SAE3C,CAAC;+EAMyB,+DAAU;YACZ,kFAAkB;YACvB,8DAAc;OAPrB,mBAAmB,CAwC/B;IAAD,0BAAC;CAAA;AAxC+B;;;;;;;;;;;;;ACbhC;AAAA;AAAA;IAEE,cACU,QAAe,EACf,MAAa,EACb,KAAY,EACZ,SAAgB,EAChB,SAAgB,EACjB,WAAgB;QALf,aAAQ,GAAR,QAAQ,CAAO;QACf,WAAM,GAAN,MAAM,CAAO;QACb,UAAK,GAAL,KAAK,CAAO;QACZ,cAAS,GAAT,SAAS,CAAO;QAChB,cAAS,GAAT,SAAS,CAAO;QACjB,gBAAW,GAAX,WAAW,CAAK;IACpB,CAAC;IACR,WAAC;AAAD,CAAC;;;;;;;;;;;;;;ACVD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,IAAI,EAAC,0CAA0C;CAChD,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;AACnE,2CAA2C;;;;;;;;;;;;;ACjB3C;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-landing-page></app-landing-page>\\n<router-outlet></router-outlet>\\n<app-repository></app-repository>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Github';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { RepositoryComponent } from './repository/repository.component';\nimport { NgProgressModule } from '@ngx-progressbar/core';\nimport { NgProgressHttpClientModule } from '@ngx-progressbar/http-client';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LandingPageComponent,\n    RepositoryComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    NgProgressModule.forRoot(),\n    NgProgressHttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {environment } from '../../environments/environment';\nimport { User } from '../user';\nimport{ Repo} from '../repo';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InfoRequestService {\n\n  user: User;\n  repo:Repo[];\n\n  constructor(private http:HttpClient) {\n    this.user= new User(\"\",\"\", 0,0,0,new Date);\n    this.repo= [];\n   }\n   infoRequest(name:string){\n    interface ApiRes{\n      login:string;\n      avatar_url: any;\n      public_repos: number;\n      followers: number;\n      following:number;\n      created_at: Date;\n    }\n    let promise = new Promise((resolve,reject)=>{\n      this.http.get<ApiRes>(\"https://api.github.com/users/\" +name +\"?access_token=\" +environment.pass).toPromise().then(response=>{\n        this.user.username = response.login\n        this.user.avatar = response.avatar_url\n        this.user.repos = response.public_repos\n        this.user.followers = response.followers\n        this.user.following = response.following\n        this.user.createdDate = response.created_at\n\n        resolve()\n      },\n      error=>{\n        this.user.username = \"Null\"\n        this.user.createdDate = new Date;\n\n        reject(error)\n      })\n    })\n    return promise\n  }\n\n  displayRepo(repo) {\n    interface ApiRes{\n      name: string;\n      description: string;\n      homepage: string;\n    }\n    let promise = new Promise((resolve, reject) => {\n      this.http.get<ApiRes>(\"https://api.github.com/users/\" +repo +\"/repos?access_token=\" +environment.pass).toPromise().then(\n          response => {\n            for (var i in response) {\n              this.repo.push(response[i]);\n            }\n            console.log(this.repo)\n            resolve();\n          },\n          error => {\n            this.user.avatar = \"\";\n            this.user.username = \"\";\n\n            reject(error);\n          })\n       \n    });\n    return promise;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xhbmRpbmctcGFnZS9sYW5kaW5nLXBhZ2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <ng-progress></ng-progress>\\n  <h2 class=\\\"text-center\\\">Github Search</h2>\\n  <form>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Username</label>\\n          <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" id=\\\"inputSmall\\\"\\n          #newUser (keyup.enter)=\\\"searchUser(newUser.value)\\\">\\n        <br><br>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-info\\\" (click)=\\\"searchUser(newUser.value)\\\">Submit</button>\\n    </div>\\n    </form>\\n    <div>\\n    <p>Username:  {{user.username}}<img src=\\\"{{user.avatar}}\\\" width=\\\"10%\\\"></p>\\n    <p>Repositories:{{user.repos}}</p>\\n    <p>Followers:{{user.followers}}</p>\\n    <p>Following:{{user.following}}</p>\\n    <p>Created Github account: {{user.createdDate|date}}</p>\\n    <br>\\n  </div>\\n\\n  \\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User} from '../user';\nimport { environment } from 'src/environments/environment';\nimport{ InfoRequestService } from '../info-http/info-request.service';\nimport { Repo } from '../repo';\nimport { ActivatedRoute } from \"@angular/router\";\n\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.css']\n})\nexport class LandingPageComponent implements OnInit {\n\n  user:User;\n  repo:Repo[];\n\n  constructor(private http:HttpClient,\n     private inforequest: InfoRequestService,\n     private router: ActivatedRoute\n    \n    ) { }\n\n    displayRepo(repo) {\n      interface ApiRes{\n        name: string;\n        description: string;\n        homepage: string;\n      }\n      let promise = new Promise((resolve, reject) => {\n      \n        this.http.get<ApiRes>(\"https://api.github.com/users/\" +repo +\"/repos?access_token=\" +environment.pass).toPromise().then(\n          response => {\n            for (var i in response) {\n              this.repo.push(response[i]);\n            }\n            console.log(this.repo)\n            resolve();\n          },\n          error => {\n            this.user.avatar = \"\";\n            this.user.username = \"\";\n\n            reject(error);\n          })\n        })  \n    }\n\n searchUser(newUser:string){\n  interface ApiRes{\n    login:string;\n    avatar_url: any;\n    public_repos: number;\n    followers: number;\n    following:number;\n    created_at: Date;\n }\n \n\n  this.http.get<ApiRes>(\"https://api.github.com/users/\"+newUser+\"?access_token=\"+(environment.pass)).subscribe(data=>{\n    // Succesful API request\n    this.user = new User(data.login, data.avatar_url, data.public_repos, data.followers, data.following, data.created_at)\n  }\n  , err =>{\n    this.user = new User(\"Sorry, an error occured\",\"\",0,0,0,new Date(2019,9,1))\n    console.log(\"An error occured\")\n  }\n  )\n}\nngOnInit() {\n  this.inforequest.infoRequest(name);\n\n  this.user = this.inforequest.user;\n\n  let id = this.router.snapshot.paramMap.get(\"id\");\n  this.inforequest.displayRepo(id);\n  this.repo = this.inforequest.repo;\n }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9zaXRvcnkvcmVwb3NpdG9yeS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<button type=\\\"submit\\\" class=\\\"btn btn-info\\\" (click)=\\\"displayRepo()\\\">See Repos</button>\\n<div *ngFor='let rep of repo'>\\n  <p>Reponame:  {{rep.reponame}}</p>\\n  <p>Description:{{rep.description}}</p>\\n  <p>Live link:{{rep.livelink}}</p>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Repo } from '../repo';\nimport { environment } from 'src/environments/environment';\nimport { User} from '../user';\nimport{ InfoRequestService } from '../info-http/info-request.service';\nimport { ActivatedRoute } from \"@angular/router\";\n\n@Component({\n  selector: 'app-repository',\n  templateUrl: './repository.component.html',\n  styleUrls: ['./repository.component.css']\n})\nexport class RepositoryComponent implements OnInit {\n\nrepo:Repo[];\nuser: User;\n\n  constructor(private http:HttpClient,\n    private inforequest: InfoRequestService,\n    private router: ActivatedRoute\n    )\n    { }\n    displayRepo(repo) {\n      interface ApiRes{\n        name: string;\n        description: string;\n        homepage: string;\n      }\n      let promise = new Promise((resolve, reject) => {\n      \n        this.http.get<ApiRes>(\"https://api.github.com/users/\" +repo +\"/repos?access_token=\" +environment.pass).toPromise().then(\n          response => {\n            for (var i in response) {\n              this.repo.push(response[i]);\n            }\n            console.log(this.repo)\n            resolve();\n          },\n          error => {\n            this.user.avatar = \"\";\n            this.user.username = \"\";\n\n            reject(error);\n          })\n        })  \n    }\n  ngOnInit() {\n    let id = this.router.snapshot.paramMap.get(\"id\");\n    this.inforequest.displayRepo(id);\n    this.repo = this.inforequest.repo;\n  }\n\n}\n","export class User {\n\n  constructor(\n     public username:string,\n     public avatar:string,\n     public repos:number,\n     public followers:number,\n     public following:number,\n    public createdDate:Date,\n     ){}\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  pass:\"40ff7a372c0120c3e656926b50c2b5224938dd9b\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n// 37f5743bd9bdbd7b7f17cc75c9422eee8fe179e9","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}